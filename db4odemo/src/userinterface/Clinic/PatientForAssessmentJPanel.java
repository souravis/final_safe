/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Clinic;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.Patient.Patient;
import Business.Patient.PatientDirectory;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PatientEvaluationWorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tarun
 */
public class PatientForAssessmentJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PatientForAssessmentJPanel
     */
    private JPanel userProcessContainer;
    private PatientDirectory patientdirectory;
    private Enterprise enterprise;
    private Organization organization;
    private UserAccount account;
    private EcoSystem system;
    private Patient patient;

    public PatientForAssessmentJPanel(JPanel userProcessContainer, Enterprise enterprise, Organization organization, UserAccount account, PatientDirectory patientdirectory) {
        initComponents();
        this.enterprise = enterprise;
        this.organization = organization;
        this.account = account;
        this.system = EcoSystem.getInstance();

        this.userProcessContainer = userProcessContainer;
        this.patientdirectory = patientdirectory;
        populateTable();
        setSize(1200,1200);
    }

    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) TblPatientForAssessment.getModel();
        dtm.setRowCount(0);
        for (Patient patient : patientdirectory.getPatientlist()) {
            Object[] row = new Object[5];
            row[0] = patient;
            row[1] = patient.getAge();
            row[2] = patient.getGender();
            row[3] = patient.getCity();
            row[4] = patient.getState();
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TblPatientForAssessment = new javax.swing.JTable();
        btnAssessmentforPatient = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnPatientHistory = new javax.swing.JButton();
        updatePatient = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Patient For Assessment");

        TblPatientForAssessment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Age", "Gender", "City", "State"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TblPatientForAssessment.setToolTipText("");
        jScrollPane1.setViewportView(TblPatientForAssessment);

        btnAssessmentforPatient.setText("Assessment For Evaluation");
        btnAssessmentforPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssessmentforPatientActionPerformed(evt);
            }
        });

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnPatientHistory.setText("View Paitent History");
        btnPatientHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatientHistoryActionPerformed(evt);
            }
        });

        updatePatient.setText("Update Patient");
        updatePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePatientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(btnPatientHistory)
                                .addGap(32, 32, 32)
                                .addComponent(updatePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(btnAssessmentforPatient))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 874, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(320, 320, 320)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(42, 42, 42))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(93, 93, 93)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAssessmentforPatient)
                    .addComponent(btnBack)
                    .addComponent(btnPatientHistory)
                    .addComponent(updatePatient))
                .addGap(150, 150, 150))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssessmentforPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssessmentforPatientActionPerformed
        // TODO add your handling code here:
        int selectedrow = TblPatientForAssessment.getSelectedRow();
        if (selectedrow >= 0) {
            patient = (Patient) TblPatientForAssessment.getValueAt(selectedrow, 0);
            PatientAssessmentJPanel assessmentpanel = new PatientAssessmentJPanel(userProcessContainer, enterprise, organization, account, patient);
            userProcessContainer.add("PatientAssessmentJPanel", assessmentpanel);

            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        } else {
            JOptionPane.showMessageDialog(null, "Please select the row");
        }
    }//GEN-LAST:event_btnAssessmentforPatientActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnPatientHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatientHistoryActionPerformed
        // TODO add your handling code here:
        int selectedrow = TblPatientForAssessment.getSelectedRow();
        if (selectedrow >= 0) {
            Patient request = (Patient) TblPatientForAssessment.getValueAt(selectedrow, 0);
            userProcessContainer.add("DoctorAssesmentJPanel", new PatientHistoryJPanel(userProcessContainer, account, enterprise, request));
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);

        } else {

            JOptionPane.showMessageDialog(null, " Please select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnPatientHistoryActionPerformed

    private void updatePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePatientActionPerformed
        // TODO add your handling code here:
        int selectedRow = TblPatientForAssessment.getSelectedRow();
        if(selectedRow >= 0){
            Patient patient = (Patient) TblPatientForAssessment.getValueAt(selectedRow, 0);
            UpdatePatientJPanel detailspanel = new UpdatePatientJPanel(userProcessContainer, enterprise, patient);
            userProcessContainer.add("PatientDetailsJPanel", detailspanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        }
      
    }//GEN-LAST:event_updatePatientActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TblPatientForAssessment;
    private javax.swing.JButton btnAssessmentforPatient;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnPatientHistory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton updatePatient;
    // End of variables declaration//GEN-END:variables
}
