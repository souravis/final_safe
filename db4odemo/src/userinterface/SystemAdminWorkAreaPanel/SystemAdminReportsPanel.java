/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SystemAdminWorkAreaPanel;

import Business.EcoSystem;
import Business.Network.Network;
import Business.Patient.CounselorAssessmentReportEnum;
import Business.Patient.HighZoneConsumptionEnum;
import java.awt.CardLayout;
import java.awt.Font;
import java.text.DecimalFormat;
import java.util.Map;
//import org.jfree.chart.util;
import java.lang.Cloneable;
import java.util.Locale;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.labels.PieSectionLabelGenerator;
import org.jfree.chart.labels.StandardPieSectionLabelGenerator;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author souravsingh
 */
public class SystemAdminReportsPanel extends javax.swing.JPanel {

    /**
     * Creates new form SystemAdminReportsPanel
     */
    JPanel userProcessContainer;
    EcoSystem system;

    public SystemAdminReportsPanel(JPanel userProcessContainer) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = EcoSystem.getInstance();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnZonesPieChart = new javax.swing.JButton();
        btnHighConsumptionNetworks = new javax.swing.JButton();
        btnHighConsumptionPattern = new javax.swing.JButton();
        btnHighConsumptionPattern1 = new javax.swing.JButton();
        btnQualitativeAnalysis = new javax.swing.JButton();
        btnPatientProgress = new javax.swing.JButton();
        btnHighZonePatientsProgress = new javax.swing.JButton();
        btnAlcoholRelatedCrimes = new javax.swing.JButton();
        btnAlcoholRelatedCrimes1 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Alcohol Consumption Trends");

        btnZonesPieChart.setText("Zones Pie Chart");
        btnZonesPieChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZonesPieChartActionPerformed(evt);
            }
        });

        btnHighConsumptionNetworks.setText("High Consumption Networks");
        btnHighConsumptionNetworks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHighConsumptionNetworksActionPerformed(evt);
            }
        });

        btnHighConsumptionPattern.setText("Harmful Alcohol Use Pattern");
        btnHighConsumptionPattern.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHighConsumptionPatternActionPerformed(evt);
            }
        });

        btnHighConsumptionPattern1.setText("Alcohol Dependence ");
        btnHighConsumptionPattern1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHighConsumptionPattern1ActionPerformed(evt);
            }
        });

        btnQualitativeAnalysis.setText("Drinking Qualitative Reports");
        btnQualitativeAnalysis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQualitativeAnalysisActionPerformed(evt);
            }
        });

        btnPatientProgress.setText("All Zone Patients Progress");
        btnPatientProgress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatientProgressActionPerformed(evt);
            }
        });

        btnHighZonePatientsProgress.setText("High Zone Patients Progress");
        btnHighZonePatientsProgress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHighZonePatientsProgressActionPerformed(evt);
            }
        });

        btnAlcoholRelatedCrimes.setText("Alcohol Related Crimes");
        btnAlcoholRelatedCrimes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlcoholRelatedCrimesActionPerformed(evt);
            }
        });

        btnAlcoholRelatedCrimes1.setText("Alcohol Crime Rate Concentration");
        btnAlcoholRelatedCrimes1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlcoholRelatedCrimes1ActionPerformed(evt);
            }
        });

        jButton1.setText("< Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnQualitativeAnalysis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnHighConsumptionPattern1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnHighConsumptionNetworks, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
                            .addComponent(btnZonesPieChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnHighConsumptionPattern, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(131, 131, 131)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnAlcoholRelatedCrimes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnHighZonePatientsProgress, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnPatientProgress, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAlcoholRelatedCrimes1, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(388, 388, 388)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(513, 513, 513)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(386, 386, 386))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jLabel1)
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnZonesPieChart, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPatientProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHighConsumptionNetworks, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHighZonePatientsProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHighConsumptionPattern, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAlcoholRelatedCrimes, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnHighConsumptionPattern1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAlcoholRelatedCrimes1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(btnQualitativeAnalysis, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnZonesPieChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZonesPieChartActionPerformed
        // TODO add your handling code here:
        Map<String, Long> zoneConcentration = system.getZoneConcentration();
        DefaultPieDataset pieDataset = new DefaultPieDataset();
        for (Map.Entry<String, Long> entry : zoneConcentration.entrySet()) {

            pieDataset.setValue(entry.getKey(), entry.getValue());

        }
//        JFreeChart chart = ChartFactory.createPieChart3D("Zone Level Concentration", pieDataset);
                JFreeChart chart = ChartFactory.createPieChart3D("Zone Level Concentration", pieDataset, true, true, Locale.ITALY);

        PiePlot3D plot = (PiePlot3D) chart.getPlot();
        plot.setLabelFont(new Font("SansSerif", Font.BOLD, 20));
        plot.setNoDataMessage("No data available");
        plot.setCircular(false);
        plot.setLabelGap(0.02);
        PieSectionLabelGenerator gen = new StandardPieSectionLabelGenerator(
                "{0}: {1} ({2})", new DecimalFormat("0"), new DecimalFormat("0%"));
        plot.setLabelGenerator(gen);

        ChartFrame chartFrame = new ChartFrame("Pie Chart", chart);
        chartFrame.setVisible(true);
        chartFrame.setSize(1200, 1200);


    }//GEN-LAST:event_btnZonesPieChartActionPerformed

    private void btnHighConsumptionNetworksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHighConsumptionNetworksActionPerformed
        // TODO add your handling code here:

        DefaultPieDataset pieDataset = new DefaultPieDataset();
        for (Network network : system.getNetworkList()) {

            pieDataset.setValue(network.getName(), network.getZone3Zone4Count());

        }

//        JFreeChart chart = ChartFactory.createPieChart3D("Network Level Zone 3 Zone 4 Concentration", pieDataset);
        JFreeChart chart = ChartFactory.createPieChart3D("Network Level Zone 3 Zone 4 Concentration", pieDataset, true, true, Locale.ITALY);

        PiePlot3D plot = (PiePlot3D) chart.getPlot();
        plot.setLabelFont(new Font("SansSerif", Font.BOLD, 20));
        plot.setNoDataMessage("No data available");
        plot.setCircular(false);
        plot.setLabelGap(0.02);
        PieSectionLabelGenerator gen = new StandardPieSectionLabelGenerator(
                "{0}: {1} ({2})", new DecimalFormat("0"), new DecimalFormat("0%"));
        plot.setLabelGenerator(gen);

        ChartFrame chartFrame = new ChartFrame("Pie Chart", chart);
        chartFrame.setVisible(true);
        chartFrame.setSize(1200, 1200);
    }//GEN-LAST:event_btnHighConsumptionNetworksActionPerformed

    private void btnHighConsumptionPatternActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHighConsumptionPatternActionPerformed
        // TODO add your handling code here:

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        for (Map.Entry<Integer, Long> entry : system.getHighZonePattern().entrySet()) {
            if (entry.getKey() <= 5) {
                continue;
            }
            int value = entry.getValue().intValue();

            dataset.setValue(value, "Pattern", HighZoneConsumptionEnum.getValueFromQuestion(entry.getKey()));
            //dataset.setValue(value, "Pattern", HighZoneConsumptionEnum.getValueFromQuestion(entry.getKey()));
        }

        JFreeChart barChart = ChartFactory.createBarChart3D(
                "Harmful Alcohol Use",
                "Question Content",
                "Number of Patient",
                dataset,
                PlotOrientation.VERTICAL,
                true, true, false);

        CategoryPlot categoryPlot = barChart.getCategoryPlot();
        // CategoryAxis domainAxis = categoryPlot.getDomainAxis();

        NumberAxis numberAxis = (NumberAxis) categoryPlot.getRangeAxis();
        numberAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());

        ChartFrame chartFrame = new ChartFrame("Bar Chart", barChart);
        chartFrame.setVisible(true);
        chartFrame.setSize(1200, 1200);

    }//GEN-LAST:event_btnHighConsumptionPatternActionPerformed

    private void btnHighConsumptionPattern1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHighConsumptionPattern1ActionPerformed
        // TODO add your handling code here:

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        for (Map.Entry<Integer, Long> entry : system.getHighZonePattern().entrySet()) {
            if (entry.getKey() > 5) {
                continue;
            }
            int value = entry.getValue().intValue();

            dataset.setValue(value, "Pattern", HighZoneConsumptionEnum.getValueFromQuestion(entry.getKey()));
            //dataset.setValue(value, "Pattern", HighZoneConsumptionEnum.getValueFromQuestion(entry.getKey()));
        }

        JFreeChart barChart = ChartFactory.createBarChart3D(
                "Alcohol Dependence Report",
                "Question Content",
                "Number of Patient",
                dataset,
                PlotOrientation.VERTICAL,
                true, true, false);

        CategoryPlot categoryPlot = barChart.getCategoryPlot();
        // CategoryAxis domainAxis = categoryPlot.getDomainAxis();

        NumberAxis numberAxis = (NumberAxis) categoryPlot.getRangeAxis();
        numberAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());

        ChartFrame chartFrame = new ChartFrame("Bar Chart", barChart);
        chartFrame.setVisible(true);
        chartFrame.setSize(1200, 1200);
    }//GEN-LAST:event_btnHighConsumptionPattern1ActionPerformed

    private void btnQualitativeAnalysisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQualitativeAnalysisActionPerformed
        // TODO add your handling code here:
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        int countCope = system.getCountofFactor(CounselorAssessmentReportEnum.DRINKINGTOCOPE);
        int countEnhance = system.getCountofFactor(CounselorAssessmentReportEnum.DrinkingToEnhance);
        int countFamilySocialSupport = system.getCountofFactor(CounselorAssessmentReportEnum.FamilySocialSupport);
        int countFriendSocialSupport = system.getCountofFactor(CounselorAssessmentReportEnum.FriendSocialSupport);
        int countnegativeLifeEvents = system.getCountofFactor(CounselorAssessmentReportEnum.NegativeLifeEventsinLastYear);
        int countViolence = system.getCountofFactor(CounselorAssessmentReportEnum.Violence);

        dataset.setValue(countCope, "Factor", "Cope");
        dataset.setValue(countEnhance, "Factor", "Enhance");
        dataset.setValue(countFamilySocialSupport, "Factor", "No Family Support");
        dataset.setValue(countFriendSocialSupport, "Factor", "Social Disconnect");
        dataset.setValue(countnegativeLifeEvents, "Factor", "Negative Life Event");
        dataset.setValue(countViolence, "Factor", "Involved in violence");

        //dataset.setValue(value, "Pattern", HighZoneConsumptionEnum.getValueFromQuestion(entry.getKey()));
        JFreeChart barChart = ChartFactory.createBarChart3D(
                "Factors Contributing To Drinking",
                "Factors",
                "Number of Patient",
                dataset,
                PlotOrientation.VERTICAL,
                true, true, false);

        CategoryPlot categoryPlot = barChart.getCategoryPlot();
        // CategoryAxis domainAxis = categoryPlot.getDomainAxis();

        NumberAxis numberAxis = (NumberAxis) categoryPlot.getRangeAxis();
        numberAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());

        ChartFrame chartFrame = new ChartFrame("Bar Chart", barChart);
        chartFrame.setVisible(true);
        chartFrame.setSize(1200, 1200);


    }//GEN-LAST:event_btnQualitativeAnalysisActionPerformed

    private void btnPatientProgressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatientProgressActionPerformed

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        Long count = system.getAllPatientsWithMin2Assessments().stream().count();

        int noofPatient = count.intValue();

        int countPositiveProgress = system.getPatientProgress(true);
        int countNegativeProgress = system.getPatientProgress(false);

        dataset.setValue(noofPatient, "Progress", "Number of Patient");
        dataset.setValue(countPositiveProgress, "Progress", "Patient Showing Improvement");
        dataset.setValue(countNegativeProgress, "Progress", "Patient Relapsing");

        JFreeChart barChart = ChartFactory.createBarChart3D(
                "Patient Progress chart",
                "Progress",
                "Number of Patient",
                dataset,
                PlotOrientation.VERTICAL,
                true, true, false);

        CategoryPlot categoryPlot = barChart.getCategoryPlot();
        // CategoryAxis domainAxis = categoryPlot.getDomainAxis();

        NumberAxis numberAxis = (NumberAxis) categoryPlot.getRangeAxis();
        numberAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());

        ChartFrame chartFrame = new ChartFrame("Bar Chart", barChart);
        chartFrame.setVisible(true);
        chartFrame.setSize(1200, 1200);

    }//GEN-LAST:event_btnPatientProgressActionPerformed

    private void btnHighZonePatientsProgressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHighZonePatientsProgressActionPerformed
        // TODO add your handling code here:

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        Long count = system.getAllPatientsWithMin2Assessments().stream()
                .filter(p -> p.isFirstAssessmentHighZone())
                .count();

        int countHighZonePatient = count.intValue();

        Long countPositiveProgress = system.getAllPatientsWithMin2Assessments().stream()
                .filter(p -> p.isFirstAssessmentHighZone())
                .filter(p -> p.isProgressPositive())
                .count();

        dataset.setValue(countHighZonePatient, "Progress", "Number of Patient Before Treatment");
        dataset.setValue(countPositiveProgress.intValue(), "Progress", "Patient Showing Improvement");
        dataset.setValue(countHighZonePatient - countPositiveProgress.intValue(), "Progress", "Patient Relapsing");

        JFreeChart barChart = ChartFactory.createBarChart3D(
                "Zone 3 and Zone 4 Progress Report",
                "Progress",
                "Number of Patient",
                dataset,
                PlotOrientation.VERTICAL,
                true, true, false);

        CategoryPlot categoryPlot = barChart.getCategoryPlot();
        // CategoryAxis domainAxis = categoryPlot.getDomainAxis();

        NumberAxis numberAxis = (NumberAxis) categoryPlot.getRangeAxis();
        numberAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());

        ChartFrame chartFrame = new ChartFrame("Bar Chart", barChart);
        chartFrame.setVisible(true);
        chartFrame.setSize(1200, 1200);


    }//GEN-LAST:event_btnHighZonePatientsProgressActionPerformed

    private void btnAlcoholRelatedCrimesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlcoholRelatedCrimesActionPerformed
        // TODO add your handling code here:

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        Map<String, Long> alcoholRelatedCrimeReport = system.getAlcoholRelatedCrimeReport();

        for (Map.Entry<String, Long> entry : alcoholRelatedCrimeReport.entrySet()) {

            int value = entry.getValue().intValue();

            dataset.setValue(value, "Pattern", entry.getKey());
        }

        JFreeChart barChart = ChartFactory.createBarChart3D(
                "Alcohol Related Crime Report",
                "Crime",
                "Number of Patient Involved",
                dataset,
                PlotOrientation.VERTICAL,
                true, true, false);

        CategoryPlot categoryPlot = barChart.getCategoryPlot();

        NumberAxis numberAxis = (NumberAxis) categoryPlot.getRangeAxis();
        numberAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());

        ChartFrame chartFrame = new ChartFrame("Bar Chart", barChart);
        chartFrame.setVisible(true);
        chartFrame.setSize(1200, 1200);

    }//GEN-LAST:event_btnAlcoholRelatedCrimesActionPerformed

    private void btnAlcoholRelatedCrimes1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlcoholRelatedCrimes1ActionPerformed
        // TODO add your handling code here:

        DefaultPieDataset pieDataset = new DefaultPieDataset();
        for (Map.Entry<String, Integer> entry : system.getNetworkLevelAlcoholCrime().entrySet()) {

            pieDataset.setValue(entry.getKey(), entry.getValue());

        }

//        JFreeChart chart = ChartFactory.createPieChart3D("Alcohol Related Crime Concentration", pieDataset);
                JFreeChart chart = ChartFactory.createPieChart3D("Alcohol Related Crime Concentration", pieDataset, true, true, Locale.ITALY);

        PiePlot3D plot = (PiePlot3D) chart.getPlot();
        plot.setLabelFont(new Font("SansSerif", Font.BOLD, 20));
        plot.setNoDataMessage("No data available");
        plot.setCircular(false);
        plot.setLabelGap(0.02);
        PieSectionLabelGenerator gen = new StandardPieSectionLabelGenerator(
                "{0}: {1} ({2})", new DecimalFormat("0"), new DecimalFormat("0%"));
        plot.setLabelGenerator(gen);

        ChartFrame chartFrame = new ChartFrame("Pie Chart", chart);
        chartFrame.setVisible(true);
        chartFrame.setSize(1200, 1200);


    }//GEN-LAST:event_btnAlcoholRelatedCrimes1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlcoholRelatedCrimes;
    private javax.swing.JButton btnAlcoholRelatedCrimes1;
    private javax.swing.JButton btnHighConsumptionNetworks;
    private javax.swing.JButton btnHighConsumptionPattern;
    private javax.swing.JButton btnHighConsumptionPattern1;
    private javax.swing.JButton btnHighZonePatientsProgress;
    private javax.swing.JButton btnPatientProgress;
    private javax.swing.JButton btnQualitativeAnalysis;
    private javax.swing.JButton btnZonesPieChart;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
